# This is a makefile that can be run using `cargo make`. 
# See https://sagiegurari.github.io/cargo-make/ for documentation. 
# There is a lot more functionality than what is used here, including 
# testing multiple platforms, running benchmarks, security checks, etc.

[env]
CARGO_MAKE_EXTEND_WORKSPACE_MAKEFILE = true

# Clippy is a collection of lints that can be helpful to catch common mistakes.
# See: https://doc.rust-lang.org/clippy/index.html.
# Here we can add the option "--", "-Dwarnings" to the args. 
# This elevates warnings to errors, which is useful because we, as developers,
# are apt to ignore warnings.
[tasks.clippy]
command = "cargo"
args = ["clippy", "--all-targets", "--workspace"]

[tasks.build]
dependencies = ["clean"]

# Since examples are not specifed as test code, you have to pass
# the option "--examples" to make sure that the dev flow builds
# and runs all the associated examples for the crate. This helps
# catch problems early that might otherwise impact projects
# dependent on the library.
[tasks.examples]
command = "cargo"
args = ["test", "--examples", "--workspace"]

# Potentially useful options to add include:
# - "--document-private-items", since this is a tutorial-style library.
# - "--examples", which allows you to produce documentation for examples.
[tasks.doc]
# Uncomment following line to elevate warnings to errors here as well
# env = { "RUSTDOCFLAGS" = "-Dwarnings"}
# Try to get workspace index into docs using nightly toolchain
 env = { "RUSTDOCFLAGS" = "--enable-index-page -Zunstable-options"}
command = "cargo"
args = ["doc", "--no-deps"]

# Set alias so that the default dev flow points to my-flow instead.
[tasks.default]
alias = "composite"

[tasks.composite]
workspace = false
dependencies = ["my-flow", "workspace-flow"]

[tasks.workspace-flow]
workspace = false
dependencies = ["doc"]

# My dev flow.
[tasks.my-flow]
# fork = true
dependencies = [
    "format",
    "clean",
    "clippy", 
  #  "build",
    "test",
    "examples",
    
]